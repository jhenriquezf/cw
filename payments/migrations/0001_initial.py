# Generated by Django 5.2.7 on 2025-10-25 14:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        ('professionals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID de pago')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado')], default='pending', max_length=20, verbose_name='Estado')),
                ('bank_name', models.CharField(blank=True, max_length=100, verbose_name='Banco')),
                ('account_number', models.CharField(blank=True, max_length=50, verbose_name='Número de cuenta')),
                ('account_holder', models.CharField(blank=True, max_length=200, verbose_name='Titular de la cuenta')),
                ('transaction_reference', models.CharField(blank=True, max_length=255, verbose_name='Referencia de transacción')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de completado')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payouts', to='professionals.professional', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Pago a profesional',
                'verbose_name_plural': 'Pagos a profesionales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PayoutBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Monto que corresponde a esta reserva', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payout_bookings', to='bookings.booking', verbose_name='Reserva')),
                ('payout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payout_bookings', to='payments.payout', verbose_name='Pago')),
            ],
            options={
                'verbose_name': 'Reserva en pago',
                'verbose_name_plural': 'Reservas en pagos',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID de pago')),
                ('gateway', models.CharField(choices=[('flow', 'Flow'), ('mercadopago', 'Mercado Pago'), ('stripe', 'Stripe'), ('manual', 'Manual/Transferencia')], default='flow', max_length=20, verbose_name='Pasarela de pago')),
                ('gateway_transaction_id', models.CharField(blank=True, help_text='ID de la transacción en Flow/MercadoPago', max_length=255, verbose_name='ID de transacción en pasarela')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Monto en CLP', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto total')),
                ('currency', models.CharField(default='CLP', max_length=3, verbose_name='Moneda')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Estado')),
                ('payment_method', models.CharField(blank=True, choices=[('credit_card', 'Tarjeta de crédito'), ('debit_card', 'Tarjeta de débito'), ('bank_transfer', 'Transferencia bancaria'), ('other', 'Otro')], max_length=20, verbose_name='Método de pago')),
                ('gateway_response', models.JSONField(blank=True, help_text='Response completo del gateway en JSON', null=True, verbose_name='Respuesta de la pasarela')),
                ('error_message', models.TextField(blank=True, help_text='Descripción del error si el pago falló', verbose_name='Mensaje de error')),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto reembolsado')),
                ('refund_reason', models.TextField(blank=True, verbose_name='Razón del reembolso')),
                ('refunded_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de reembolso')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de completado')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payment', to='bookings.booking', verbose_name='Reserva')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['booking'], name='payments_pa_booking_8fd3de_idx'), models.Index(fields=['status', 'gateway'], name='payments_pa_status_224f58_idx'), models.Index(fields=['gateway_transaction_id'], name='payments_pa_gateway_2a3159_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['professional', 'status'], name='payments_pa_profess_aa10a5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='payoutbooking',
            unique_together={('payout', 'booking')},
        ),
    ]
